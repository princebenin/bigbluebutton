<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2015 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:mate="http://mate.asfusion.com/"
		  implements="org.bigbluebutton.common.IKeyboardClose"
		  verticalScrollPolicy="off"
          horizontalScrollPolicy="off"
          horizontalAlign="center"
          showCloseButton="false"
          creationComplete="onCreationComplete()"
          minWidth="350"
          title="{ResourceUtil.getInstance().getString('bbb.logout.confirm.title')}">

  <fx:Script>
    <![CDATA[
      import com.asfusion.mate.events.Dispatcher;
      
      import mx.managers.PopUpManager;
      
      import org.as3commons.logging.api.ILogger;
      import org.as3commons.logging.api.getClassLogger;
      import org.bigbluebutton.core.UsersUtil;
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.main.events.LogoutEvent;
      import org.bigbluebutton.util.i18n.ResourceUtil;

      private static const LOGGER:ILogger = getClassLogger(LogoutWindow);
      
      private var globalDispatcher:Dispatcher = new Dispatcher();;

      private function onCreationComplete():void {
        cancelButton.setFocus();
        endMeetingButton.visible = endMeetingButton.includeInLayout = UsersUtil.amIModerator() && !UsersUtil.isBreakout();
      }

      private function endMeetingClickHandler():void {
        globalDispatcher.dispatchEvent(new BBBEvent(BBBEvent.CONFIRM_LOGOUT_END_MEETING_EVENT));

        close();
      }

      private function confirmButtonClickHandler():void {
        globalDispatcher.dispatchEvent(new LogoutEvent(LogoutEvent.USER_LOGGED_OUT));

        close();
      }

      private function cancelButtonClickHandler():void {
        close();
      }

      private function close():void {
        PopUpManager.removePopUp(this);
      }
    ]]>
  </fx:Script>

  <mx:VBox width="100%" height="100%">
    <mx:Box width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
      <mx:Text text="{ResourceUtil.getInstance().getString('bbb.logout.confirm.message')}" />
    </mx:Box>
    <mx:HBox width="100%" horizontalAlign="center">
      <mx:Button id="confimButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.yes')}" click="confirmButtonClickHandler()" />
      <mx:Button id="cancelButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.no')}" click="cancelButtonClickHandler()" />
      <mx:Button id="endMeetingButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.endMeeting')}" click="endMeetingClickHandler()" />
   </mx:HBox>
  </mx:VBox>
</mx:TitleWindow>
